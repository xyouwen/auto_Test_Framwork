<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="6" passed="4">
  <reporter-output>
    <line>
      <![CDATA[<img src='http://127.0.0.1:7777/screenshot/SeleniumUtilTest/1539247381523.jpg'  hight='100' width='100' ><a href='http://127.0.0.1:7777/screenshot/SeleniumUtilTest/1539247381523.jpg'  target='_blank'><br>点查查看大图</a></img>]]>
    </line>
    <line>
      <![CDATA[<img src='http://127.0.0.1:7777/screenshot/SeleniumUtilTest/1539247388909.jpg'  hight='100' width='100' ><a href='http://127.0.0.1:7777/screenshot/SeleniumUtilTest/1539247388909.jpg'  target='_blank'><br>点查查看大图</a></img>]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="45280" started-at="2018-10-11T08:42:54Z" finished-at="2018-10-11T08:43:40Z">
    <groups>
    </groups>
    <test name="SeleniumUtilTest" duration-ms="45280" started-at="2018-10-11T08:42:54Z" finished-at="2018-10-11T08:43:40Z">
      <class name="com.selenium.xyouwen.testcase.RegisterTest">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.selenium.xyouwen.testcase.RegisterTest@167fdd33]" name="beforeSuite" is-config="true" duration-ms="6566" started-at="2018-10-11T16:42:48Z" finished-at="2018-10-11T16:42:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:\Program Files (x86)\Mozilla Firefox\firefox.exe]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="FAIL" signature="failureTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.selenium.xyouwen.testcase.RegisterTest@167fdd33]" name="failureTest" duration-ms="5669" started-at="2018-10-11T16:42:55Z" data-provider="failureTest_dp" finished-at="2018-10-11T16:43:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[手机号不能为空]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [手机号不能为空] but found [用户名不能为空]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [手机号不能为空] but found [用户名不能为空]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at com.selenium.xyouwen.testcase.RegisterTest.failureTest(RegisterTest.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:74)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:93)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)
	at com.sun.proxy.$Proxy0.invoke(Unknown Source)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:145)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[<img src='http://127.0.0.1:7777/screenshot/SeleniumUtilTest/1539247381523.jpg'  hight='100' width='100' ><a href='http://127.0.0.1:7777/screenshot/SeleniumUtilTest/1539247381523.jpg'  target='_blank'><br>点查查看大图</a></img>]]>
            </line>
          </reporter-output>
        </test-method> <!-- failureTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.selenium.xyouwen.testcase.RegisterTest@167fdd33]" name="afterMethod" is-config="true" duration-ms="4401" started-at="2018-10-11T16:43:01Z" finished-at="2018-10-11T16:43:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="failureTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.selenium.xyouwen.testcase.RegisterTest@167fdd33]" name="failureTest" duration-ms="2694" started-at="2018-10-11T16:43:05Z" data-provider="failureTest_dp" finished-at="2018-10-11T16:43:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[lemon]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[非法手机号]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [非法手机号] but found [非法的手机号]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [非法手机号] but found [非法的手机号]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at com.selenium.xyouwen.testcase.RegisterTest.failureTest(RegisterTest.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:74)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:93)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)
	at com.sun.proxy.$Proxy0.invoke(Unknown Source)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:145)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[<img src='http://127.0.0.1:7777/screenshot/SeleniumUtilTest/1539247388909.jpg'  hight='100' width='100' ><a href='http://127.0.0.1:7777/screenshot/SeleniumUtilTest/1539247388909.jpg'  target='_blank'><br>点查查看大图</a></img>]]>
            </line>
          </reporter-output>
        </test-method> <!-- failureTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.selenium.xyouwen.testcase.RegisterTest@167fdd33]" name="afterMethod" is-config="true" duration-ms="4313" started-at="2018-10-11T16:43:08Z" finished-at="2018-10-11T16:43:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="failureTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.selenium.xyouwen.testcase.RegisterTest@167fdd33]" name="failureTest" duration-ms="2524" started-at="2018-10-11T16:43:13Z" data-provider="failureTest_dp" finished-at="2018-10-11T16:43:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13888888888]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[密码不能为空]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.selenium.xyouwen.testcase.RegisterTest@167fdd33]" name="afterMethod" is-config="true" duration-ms="4361" started-at="2018-10-11T16:43:15Z" finished-at="2018-10-11T16:43:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="failureTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.selenium.xyouwen.testcase.RegisterTest@167fdd33]" name="failureTest" duration-ms="2603" started-at="2018-10-11T16:43:20Z" data-provider="failureTest_dp" finished-at="2018-10-11T16:43:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13888888888]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[密码长度至少为6位]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.selenium.xyouwen.testcase.RegisterTest@167fdd33]" name="afterMethod" is-config="true" duration-ms="4051" started-at="2018-10-11T16:43:22Z" finished-at="2018-10-11T16:43:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="failureTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.selenium.xyouwen.testcase.RegisterTest@167fdd33]" name="failureTest" duration-ms="2631" started-at="2018-10-11T16:43:26Z" data-provider="failureTest_dp" finished-at="2018-10-11T16:43:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13888888888]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[重复密码不能为空]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.selenium.xyouwen.testcase.RegisterTest@167fdd33]" name="afterMethod" is-config="true" duration-ms="4378" started-at="2018-10-11T16:43:29Z" finished-at="2018-10-11T16:43:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="failureTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.selenium.xyouwen.testcase.RegisterTest@167fdd33]" name="failureTest" duration-ms="2537" started-at="2018-10-11T16:43:33Z" data-provider="failureTest_dp" finished-at="2018-10-11T16:43:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13888888888]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1234567]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[密码不一致]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.selenium.xyouwen.testcase.RegisterTest@167fdd33]" name="afterMethod" is-config="true" duration-ms="3866" started-at="2018-10-11T16:43:36Z" finished-at="2018-10-11T16:43:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.selenium.xyouwen.testcase.RegisterTest@167fdd33]" name="afterSuite" is-config="true" duration-ms="3691" started-at="2018-10-11T16:43:40Z" finished-at="2018-10-11T16:43:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.selenium.xyouwen.testcase.RegisterTest -->
    </test> <!-- SeleniumUtilTest -->
  </suite> <!-- Suite -->
</testng-results>
